#!/bin/bash

# –¶–≤–µ—Ç–∞
CLR_INFO='\033[1;97;44m'
CLR_SUCCESS='\033[1;30;42m'
CLR_WARNING='\033[1;37;41m'
CLR_ERROR='\033[1;31;40m'
CLR_RESET='\033[0m'
CLR_GREEN='\033[0;32m'

# –ü—É—Ç–∏
KEY_DIR="$HOME/ssh_temp_keys"
KEY_NAME="temp_key"
KEY_PATH="$KEY_DIR/$KEY_NAME"

# ======= –õ–æ–≥–æ—Ç–∏–ø ========
function show_logo() {
    echo -e "${CLR_INFO}         SSH Key Manager by Profit Nodes         ${CLR_RESET}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/main/logo_new.sh | bash
}

# ======= –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π ========
function generate_keys() {
    mkdir -p "$KEY_DIR"
    if ssh-keygen -t rsa -b 4096 -C "temp@key" -f "$KEY_PATH" -N "" > /dev/null 2>&1; then
        echo -e "${CLR_SUCCESS}‚úÖ –ö–ª—é—á–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –≤: $KEY_DIR${CLR_RESET}"
    else
        echo -e "${CLR_ERROR}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π.${CLR_RESET}"
    fi
}

# ======= –ü–æ–∫–∞–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ ========
function show_private() {
    if [ -f "$KEY_PATH" ]; then
        echo -e "${CLR_INFO}üîê –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á:${CLR_RESET}"
        cat "$KEY_PATH"
    else
        echo -e "${CLR_WARNING}–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω.${CLR_RESET}"
    fi
}

# ======= –ü–æ–∫–∞–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ ========
function show_public() {
    if [ -f "$KEY_PATH.pub" ]; then
        echo -e "${CLR_INFO}üîì –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á:${CLR_RESET}"
        cat "$KEY_PATH.pub"
    else
        echo -e "${CLR_WARNING}–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω.${CLR_RESET}"
    fi
}

# ======= –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π ========
function delete_keys() {
    if [ -f "$KEY_PATH" ] || [ -f "$KEY_PATH.pub" ]; then
        rm -f "$KEY_PATH" "$KEY_PATH.pub"
        rm -rf "$KEY_DIR"
        echo -e "${CLR_SUCCESS}üóëÔ∏è –ö–ª—é—á–∏ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.${CLR_RESET}"
    else
        echo -e "${CLR_WARNING}–ö–ª—é—á–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω—ã –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.${CLR_RESET}"
    fi
}

# ======= –ú–µ–Ω—é ========
function show_menu() {
    show_logo
    echo -e "${CLR_GREEN}1) üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å SSH-–∫–ª—é—á–∏${CLR_RESET}"
    echo -e "${CLR_GREEN}2) üì• –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á${CLR_RESET}"
    echo -e "${CLR_GREEN}3) üì§ –ü–æ–∫–∞–∑–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á${CLR_RESET}"
    echo -e "${CLR_GREEN}4) üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á–∏ –∏ –ø–∞–ø–∫—É${CLR_RESET}"
    echo -e "${CLR_GREEN}5) ‚ùå –í—ã–π—Ç–∏${CLR_RESET}"
    echo -ne "${CLR_INFO}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${CLR_RESET}"
    read -r choice
    case $choice in
        1) generate_keys ;;
        2) show_private ;;
        3) show_public ;;
        4) delete_keys ;;
        5) exit 0 ;;
        *) echo -e "${CLR_ERROR}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${CLR_RESET}"; sleep 1 ;;
    esac
    echo ""
    show_menu
}

show_menu
